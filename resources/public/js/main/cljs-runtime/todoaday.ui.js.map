{"version":3,"sources":["todoaday/ui.cljs"],"mappings":";;;;;AAMA,AAAA,AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAC6CwB;AAD7C,AAAApB,AAAAJ,AAAA,AAC+BuB;AAD/B,AAAA,AAAA,AACiE,AAACE,AAAuBC;AADzF,AAAA,AAAaJ;AAAb,AAAA,AAAAjB,AAAA,AAAaiB;AAAb,AAAA,AAAAhB,AAAA,AAAAC,AAAae;AAAbhB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAL,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAAC,AAAAG,AAAAA;AAAA,AAAAF,AAAAE,AAAA,AAA0BiB;AAA1B,AAEE,AAAAI,AAAA,AAAA,AAAA,AAAS,AAACC,AAAAA,AAAAA,AAAwBL,AAAAA;;;AAFpC,AAAA,AAAA,AAAAf,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;AAAA,AAAAC,AAAOU;AAAP,AAAA,AAAAT,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAT,AAAAN,AAAA;AAAA,AAAA,AAAAe;AAAA,AAAAC,AAAAD;AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAAC,AAAAJ;AAAAK,AAAA,AAAAC,AAAAP,AAAA;AAAA,AAAA,AAAAG,AAAAA,AAAAE,AAAAC,AAAAH,AAAAE,AAAAC;;AAAA,AAAAF;;;AAAA,AAAA,AAAAH,AAAA,AAAAO,AAAA,AAAA,AAAA;AAAA,AAAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAAtB,AAAOuB","names":["options__44865__auto__","p__48517","map__48518","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.fulcrologic.fulcro.components/wrapped-render","map__48520","com.fulcrologic.fulcro.components/props","js/todoaday","js/todoaday.ui","js/todoaday.ui.Root","props__44866__auto__","this__44867__auto__","temp__5733__auto__","init-state__44868__auto__","obj48523","G__48524","G__48525","goog.object/get","obj48527","com.fulcrologic.fulcro.components/configure-component!","todoaday.ui/Root","this","todolist","params","com.fulcrologic.fulcro.components.get_initial_state","todoaday.pages.manage-todos/TodoList","com.fulcrologic.fulcro.dom.macro_create_element","todoaday.pages.manage-todos/ui-todolist"],"sourcesContent":["(ns todoaday.ui\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [todoaday.pages.manage-todos :as manage-page :refer [TodoList]]))\n\n(defsc Root [this {:keys [todolist]}]\n  {:initial-state (fn [{:keys [todolist] :as params}] {:todolist (comp/get-initial-state TodoList)})}\n  (dom/div (manage-page/ui-todolist todolist)))\n"]}